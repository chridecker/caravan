@page "/"
@using Blazored.Modal.Services
@using chd.CaraVan.Contracts.Dtos
@using chd.CaraVan.Shared.UI.Dtos
@using chd.Caravan.Mobile.UI.Components.Shared
@using chd.Caravan.Mobile.UI.Constants
@using chd.Caravan.Mobile.UI.Dtos
@using chd.Caravan.Mobile.UI.Interfaces

<div class="home-content">
    @if (this._heartRateData is not null)
    {
        <HeartRateComponent Data="this._heartRateData" />
    }

    <LoadingCard BatteryData="@_batteryData" SolarData="@_solarData" />


    <div class="sensor-data">
        @foreach (var device in this._ruuviData)
        {
            <SensorCard Name="@connectedDevices.FirstOrDefault(x => x.Id == device.Key).Name"
                        Value="device.Value.Temperature.Value" />
        }
    </div>

    @if (this.connectedDevices.Any(a => a.BatteryLevel is not null && a.BatteryLevel.Any()))
    {
        <div class="batteries">
            @foreach (var d in this.connectedDevices.Where(x => x.BatteryLevel is not null && x.BatteryLevel.Any()))
            {
                <div class="battery">@d.Name (@(string.Join("-", d.BatteryLevel)))</div>
            }
        </div>
    }

    @if (this.connectedDevices.Any())
    {
        <div class="devices">
            @foreach (var device in connectedDevices)
            {
                <ConnectedDeviceComponent Device="device" IsCurrentDevice="(BLEDevice d) => this._currentSelectedDevice?.Id == d.Id" OnClick="this.SelectDevice" />
            }
        </div>
    }

    <FloatingActionNavigation FAIconActive="magnifying-glass" OnClick="this.OpenScanModal" TextActive="Start Scan">

        @if (this._currentSelectedDevice is not null)
        {
            <FloatingActionButton FAClass="wrench" OnClick="this.OpenDeviceSettings" Title="Device Settings" />
            <FloatingActionButton FAClass="clouds" OnClick="this.ScanServices" Title="Scan Services" />
            @if (this._currentSelectedDevice.IsStarted)
            {
                <FloatingActionButton FAClass="trash" OnClick="this.DisconnectDevice" Title="Disconnect" />
            }
            else
            {
                <FloatingActionButton FAClass="play" OnClick="async()=>await this.StartDevice(this._currentSelectedDevice)" Title="Start" />
            }
            @if (!this._savedDevices.Any(a => a.Id == this._currentSelectedDevice.Id))
            {
                <FloatingActionButton FAClass="floppy-disk" OnClick="this.SaveDevice" Title="Save" />
            }
            else
            {
                <FloatingActionButton FAClass="floppy-disk-circle-xmark" OnClick="this.DeleteDevice" Title="Delete" />
            }
        }
    </FloatingActionNavigation>

</div>

