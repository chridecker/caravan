<div class="loading-solar-container">
    <div class="solar-loading-state">
        <div class="current-loading">
            <div class="current-loading-bar @_solarState"></div>
        </div>
        <div class="solar-charging @_solarState">
            <div class="solar-loading-state-bar">
                <div class="solar-loading-state">
                    <div class="solar-loading-state-icon">
                        <CustomIcon FAClass="solar-panel" />
                    </div>
                    <div class="amp">@SolarAmpere.ToString("n1")</div>
                    <div class="loading-phase">@LoadingPhase</div>
                    <div class="state">
                        <div class="state-indicator @(this.Reduce ? " reduce" : "" )"></div>
                        <div class="state-indicator-text">SR</div>
                    </div> <div class="state">
                        <div class="state-indicator @(this.AES ? " aes" : "" )"></div>
                        <div class="state-indicator-text">AES</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter] public decimal SolarAmpere { get; set; }
    [Parameter] public string LoadingPhase { get; set; }
    [Parameter] public bool Active { get; set; }
    [Parameter] public bool Reduce { get; set; }
    [Parameter] public bool AES { get; set; }

    private string _solarState => (this.Active, this.Reduce, this.AES) switch
    {
        (false, _, _) => "standby",
        (true, false, _) => "active",
        (true, true, _) => "reduce",
    };
}
