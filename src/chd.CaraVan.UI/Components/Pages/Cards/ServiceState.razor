@using chd.CaraVan.Contracts.Interfaces
@inject ISystemManager manager
<div class="service-state-container">
    <div class="service-state-title">
        @Service
    </div>
    <div class="service-state-button">
        <SmartButton Checked="this.State()" CheckedChanged="this.Change"></SmartButton>
    </div>
    <div class="service-state-changetime">
        <div class="service-state-changetime-picker">
            <input type="time" @bind-value="@span" />
        </div>
        <div class="service-state-changetime-button">
            <IconButton FAClass="eraser" OnClick="()=>{span = null;}" />
        </div>
    </div>
</div>
@code {
    [Parameter, EditorRequired] public CancellationToken Token { get; set; }
    [Parameter] public string Service { get; set; }

    private DateTime? span;

    private async Task<bool> State(CancellationToken cancellationToken = default) => (await manager.IsServiceRunning(Service, this.Token)).HasValue;

    private async Task Change(bool val)
    {
        if (!val)
        {
            await manager.StopService(new ServiceControlDto { Service = this.Service }, this.Token);
        }
        else
        {
            await manager.StartService(new ServiceControlDto { Service = this.Service }, this.Token);
        }
        if (span.HasValue)
        {
            await manager.ChangeStateInTime(new ServiceControlDto { Service = this.Service, Time = span.Value.TimeOfDay }, this.Token);
        }
    }
}
